---
const { class: additionalClass = '' } = Astro.props;
---

<style>
  .animate-content {
    opacity: 0;
    transform: translateY(50px);
  }
</style>

<script type="module">
  import { gsap } from 'https://cdn.skypack.dev/gsap';
  import ScrollTrigger from 'https://cdn.skypack.dev/gsap/ScrollTrigger';
  
  gsap.registerPlugin(ScrollTrigger);

  document.addEventListener('DOMContentLoaded', () => {
    const elements = document.querySelectorAll('.animate-content');

    elements.forEach(element => {
      gsap.fromTo(element,
        { opacity: 0, y: 50 },
        {
          opacity: 1,
          y: 0,
          duration: 0.5,
          ease: 'easeOut',
          scrollTrigger: {
            trigger: element,
            end: 'top 50%',
            scrub: 1,
            markers: false
          }
        }
      );
    });
  });
</script>


<div class={`animate-content ${additionalClass}`}>
  <slot />
</div>





<!-- ---
const { class: additionalClass = '' } = Astro.props;
---
<style>
  .animate-content {
    opacity: 0;
    transform: translateY(50px);
    transition: opacity 0.5s ease-out, transform 0.5s ease-out;
  }
 
  .animate-content.visible {
    opacity: 1;
    transform: translateY(0);
  }
</style>
 
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const elements = document.querySelectorAll(".animate-content");
 
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add("visible");
        } else {
          entry.target.classList.remove("visible");
        }
      });
    }, {
      root: null,
      rootMargin: "0px",
      threshold: 0.1
    });
 
    elements.forEach(element => {
      observer.observe(element);
    });
  });
</script>
 
<div class={`animate-content ${additionalClass}` }>
  <slot />
</div> -->